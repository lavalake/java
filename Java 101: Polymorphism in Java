https://www.javaworld.com/article/3033445/learn-java/java-101-polymorphism-in-java.html

Java uses late binding for all non-final, non-private instance methods. This is how polymorphism is implemented
Why binding of static, final and private methods is always a static binding? 
Static binding is better performance wise (no extra overhead is required). Compiler knows that all such methods cannot be overridden and will always be accessed by object of local class. Hence compiler doesn’t have any difficulty to determine object of class (local class for sure). That’s the reason binding for such methods is static
